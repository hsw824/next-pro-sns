const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const { VanillaExtractPlugin } = require('@vanilla-extract/webpack-plugin');

module.exports = {
	entry: './src/index.tsx',
	output: {
		filename: '[name].js',
		path: path.resolve(__dirname, 'dist'),
		clean: true,
	},
	plugins: [
		new HtmlWebpackPlugin({
			template: 'index.html',
		}),
		new VanillaExtractPlugin(),
	],
	module: {
		rules: [
			{
				test: /\.(ts|tsx)$/i,
				loader: 'babel-loader',
				exclude: ['/node_modules/'],
			},
			//style-loader는 HTML 문서에 CSS 스타일을 주입하는 로더이고 css-loader는 CSS 파일을 해석하고 JavaScript 모듈로 변환하는 것을 담당한다.
			{
				test: /\.s?css$/,
				use: [
					'style-loader',
					'css-modules-typescript-loader',
					{ loader: 'css-loader', options: { modules: true } }, // *.module.scss 파일 사용을 위해 modules 옵션 true 설정.
					{
						loader: 'sass-loader',
						options: {
							implementation: require('sass'), // Prefer `dart-sass`
							outputStyle: 'compressed', // `dart-sass` not support "compact" and "nest"
						},
					},
				],
			},
			{
				test: /\.(eot|svg|ttf|woff|woff2|png|jpg|gif)$/i,
				type: 'asset',
			},
			// {
			// 	test: /\.vanilla\.css$/i, // Targets only CSS files generated by vanilla-extract
			// 	use: [
			// 		'style-loader',
			// 		{
			// 			loader: require.resolve('css-loader'),
			// 			options: {
			// 				url: false, // Required as image imports should be handled via JS/TS import statements
			// 			},
			// 		},
			// 	],
			// },
		],
	},
	resolve: {
		extensions: ['.tsx', '.ts', '.jsx', '.js', '...'],
	},
};
